
#
# XPLD snow effect
# friol 2k20
#

sinTable256 db 128, 131, 134, 137, 140, 143, 146, 149, 152, 155, 158, 161, 164, 167, 170, 173, 176, 179, 182, 185, 187, 190, 193, 195, 198, 201, 203, 206, 208, 210, 213, 215, 217, 219, 222, 224, 226, 228, 230, 231, 233, 235, 236, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 251, 252, 253, 253, 254, 254, 254, 254, 254, 255, 254, 254, 254, 254, 254, 253, 253, 252, 251, 251, 250, 249, 248, 247, 246, 245, 244, 242, 241, 240, 238, 236, 235, 233, 231, 230, 228, 226, 224, 222, 219, 217, 215, 213, 210, 208, 206, 203, 201, 198, 195, 193, 190, 187, 185, 182, 179, 176, 173, 170, 167, 164, 161, 158, 155, 152, 149, 146, 143, 140, 137, 134, 131, 128, 124, 121, 118, 115, 112, 109, 106, 103, 100, 97, 94, 91, 88, 85, 82, 79, 76, 73, 70, 68, 65, 62, 60, 57, 54, 52, 49, 47, 45, 42, 40, 38, 36, 33, 31, 29, 27, 25, 24, 22, 20, 19, 17, 15, 14, 13, 11, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 19, 20, 22, 24, 25, 27, 29, 31, 33, 36, 38, 40, 42, 45, 47, 49, 52, 54, 57, 60, 62, 65, 68, 70, 73, 76, 79, 82, 85, 88, 91, 94, 97, 100, 103, 106, 109, 112, 115, 118, 121, 124
xpldLogoData db 252, 255, 255, 3, 0, 252, 255, 127, 0, 255, 255, 255, 255, 255, 0, 0, 192, 255, 255, 7, 0, 0, 0, 254, 255, 255, 255, 255, 3, 0, 0, 248, 255, 255, 7, 0, 252, 255, 127, 0, 255, 255, 255, 255, 255, 7, 0, 192, 255, 255, 7, 0, 0, 0, 254, 255, 255, 255, 255, 31, 0, 0, 248, 255, 255, 7, 0, 252, 255, 127, 0, 255, 255, 255, 255, 255, 31, 0, 192, 255, 255, 7, 0, 0, 0, 254, 255, 255, 255, 255, 127, 0, 0, 240, 255, 255, 15, 0, 254, 255, 127, 0, 255, 255, 255, 255, 255, 63, 0, 192, 255, 255, 7, 0, 0, 0, 254, 255, 255, 255, 255, 255, 1, 0, 240, 255, 255, 15, 0, 254, 255, 63, 0, 255, 255, 255, 255, 255, 255, 0, 192, 255, 255, 7, 0, 0, 0, 254, 255, 255, 255, 255, 255, 7, 0, 224, 255, 255, 15, 0, 255, 255, 31, 0, 255, 255, 255, 255, 255, 255, 1, 192, 255, 255, 7, 0, 0, 0, 254, 255, 255, 255, 255, 255, 31, 0, 224, 255, 255, 15, 0, 255, 255, 31, 0, 255, 255, 255, 255, 255, 255, 3, 192, 255, 255, 7, 0, 0, 0, 254, 255, 255, 255, 255, 255, 63, 0, 224, 255, 255, 15, 0, 255, 255, 31, 0, 255, 255, 255, 255, 255, 255, 7, 192, 255, 255, 7, 0, 0, 0, 254, 255, 255, 255, 255, 255, 127, 0, 192, 255, 255, 31, 0, 255, 255, 31, 0, 255, 255, 255, 255, 255, 255, 15, 192, 255, 255, 7, 0, 0, 0, 254, 255, 255, 255, 255, 255, 255, 0, 192, 255, 255, 31, 128, 255, 255, 15, 0, 255, 255, 255, 255, 255, 255, 15, 192, 255, 255, 7, 0, 0, 0, 254, 255, 255, 255, 255, 255, 255, 1, 128, 255, 255, 31, 128, 255, 255, 7, 0, 255, 255, 255, 255, 255, 255, 15, 192, 255, 255, 7, 0, 0, 0, 254, 255, 255, 255, 255, 255, 255, 3, 0, 255, 255, 63, 192, 255, 255, 3, 0, 255, 255, 255, 255, 255, 255, 31, 192, 255, 255, 7, 0, 0, 0, 254, 255, 255, 255, 255, 255, 255, 7, 0, 254, 255, 63, 224, 255, 255, 1, 0, 255, 255, 255, 255, 255, 255, 31, 192, 255, 255, 7, 0, 0, 0, 254, 255, 255, 255, 255, 255, 255, 7, 0, 254, 255, 127, 224, 255, 255, 1, 0, 255, 255, 255, 255, 255, 255, 31, 192, 255, 255, 7, 0, 0, 0, 254, 255, 255, 255, 255, 255, 255, 15, 0, 252, 255, 127, 224, 255, 255, 1, 0, 255, 255, 15, 224, 255, 255, 31, 192, 255, 255, 7, 0, 0, 0, 254, 255, 255, 255, 255, 255, 255, 15, 0, 252, 255, 255, 240, 255, 255, 1, 0, 255, 255, 15, 128, 255, 255, 63, 192, 255, 255, 7, 0, 0, 0, 254, 255, 31, 224, 255, 255, 255, 31, 0, 248, 255, 255, 240, 255, 255, 0, 0, 255, 255, 15, 0, 255, 255, 63, 192, 255, 255, 7, 0, 0, 0, 254, 255, 31, 0, 248, 255, 255, 31, 0, 248, 255, 255, 248, 255, 127, 0, 0, 255, 255, 15, 0, 255, 255, 63, 192, 255, 255, 7, 0, 0, 0, 254, 255, 31, 0, 248, 255, 255, 63, 0, 240, 255, 255, 249, 255, 127, 0, 0, 255, 255, 15, 0, 254, 255, 63, 192, 255, 255, 7, 0, 0, 0, 254, 255, 31, 0, 224, 255, 255, 63, 0, 240, 255, 255, 253, 255, 63, 0, 0, 255, 255, 15, 0, 254, 255, 63, 192, 255, 255, 7, 0, 0, 0, 254, 255, 31, 0, 192, 255, 255, 63, 0, 224, 255, 255, 255, 255, 63, 0, 0, 255, 255, 15, 0, 254, 255, 63, 192, 255, 255, 7, 0, 0, 0, 254, 255, 31, 0, 128, 255, 255, 127, 0, 224, 255, 255, 255, 255, 31, 0, 0, 255, 255, 15, 0, 254, 255, 63, 192, 255, 255, 7, 0, 0, 0, 254, 255, 31, 0, 128, 255, 255, 127, 0, 192, 255, 255, 255, 255, 15, 0, 0, 255, 255, 15, 0, 254, 255, 63, 192, 255, 255, 7, 0, 0, 0, 254, 255, 31, 0, 0, 255, 255, 127, 0, 128, 255, 255, 255, 255, 7, 0, 0, 255, 255, 15, 0, 254, 255, 63, 192, 255, 255, 7, 0, 0, 0, 254, 255, 31, 0, 0, 255, 255, 255, 0, 128, 255, 255, 255, 255, 7, 0, 0, 255, 255, 15, 0, 254, 255, 63, 192, 255, 255, 7, 0, 0, 0, 254, 255, 31, 0, 0, 254, 255, 127, 0, 0, 255, 255, 255, 255, 7, 0, 0, 255, 255, 15, 0, 254, 255, 63, 192, 255, 255, 7, 0, 0, 0, 254, 255, 31, 0, 0, 254, 255, 255, 0, 0, 255, 255, 255, 255, 3, 0, 0, 255, 255, 15, 0, 255, 255, 63, 192, 255, 255, 7, 0, 0, 0, 254, 255, 31, 0, 0, 254, 255, 255, 0, 0, 254, 255, 255, 255, 1, 0, 0, 255, 255, 15, 128, 255, 255, 31, 192, 255, 255, 7, 0, 0, 0, 254, 255, 31, 0, 0, 252, 255, 255, 0, 0, 254, 255, 255, 255, 1, 0, 0, 255, 255, 15, 128, 255, 255, 31, 192, 255, 255, 7, 0, 0, 0, 254, 255, 31, 0, 0, 252, 255, 255, 0, 0, 252, 255, 255, 255, 0, 0, 0, 255, 255, 15, 240, 255, 255, 15, 192, 255, 255, 7, 0, 0, 0, 254, 255, 31, 0, 0, 252, 255, 255, 0, 0, 252, 255, 255, 255, 0, 0, 0, 255, 255, 255, 255, 255, 255, 15, 192, 255, 255, 7, 0, 0, 0, 254, 255, 31, 0, 0, 252, 255, 255, 0, 0, 248, 255, 255, 127, 0, 0, 0, 255, 255, 255, 255, 255, 255, 15, 192, 255, 255, 7, 0, 0, 0, 254, 255, 31, 0, 0, 252, 255, 255, 0, 0, 248, 255, 255, 127, 0, 0, 0, 255, 255, 255, 255, 255, 255, 15, 192, 255, 255, 7, 0, 0, 0, 254, 255, 31, 0, 0, 252, 255, 255, 0, 0, 248, 255, 255, 255, 0, 0, 0, 255, 255, 255, 255, 255, 255, 7, 192, 255, 255, 7, 0, 0, 0, 254, 255, 31, 0, 0, 252, 255, 255, 0, 0, 252, 255, 255, 255, 0, 0, 0, 255, 255, 255, 255, 255, 255, 3, 192, 255, 255, 7, 0, 0, 0, 254, 255, 31, 0, 0, 252, 255, 255, 0, 0, 252, 255, 255, 255, 1, 0, 0, 255, 255, 255, 255, 255, 255, 1, 192, 255, 255, 7, 0, 0, 0, 254, 255, 31, 0, 0, 252, 255, 255, 0, 0, 254, 255, 255, 255, 1, 0, 0, 255, 255, 255, 255, 255, 255, 1, 192, 255, 255, 7, 0, 0, 0, 254, 255, 31, 0, 0, 252, 255, 255, 0, 0, 254, 255, 255, 255, 3, 0, 0, 255, 255, 255, 255, 255, 255, 0, 192, 255, 255, 7, 0, 0, 0, 254, 255, 31, 0, 0, 252, 255, 255, 0, 0, 255, 255, 255, 255, 7, 0, 0, 255, 255, 255, 255, 255, 63, 0, 192, 255, 255, 7, 0, 0, 0, 254, 255, 31, 0, 0, 254, 255, 255, 0, 128, 255, 255, 255, 255, 7, 0, 0, 255, 255, 255, 255, 255, 15, 0, 192, 255, 255, 7, 0, 0, 0, 254, 255, 31, 0, 0, 254, 255, 127, 0, 128, 255, 255, 255, 255, 15, 0, 0, 255, 255, 255, 255, 255, 7, 0, 192, 255, 255, 7, 0, 0, 0, 254, 255, 31, 0, 0, 254, 255, 127, 0, 192, 255, 255, 255, 255, 15, 0, 0, 255, 255, 255, 255, 255, 1, 0, 192, 255, 255, 7, 0, 0, 0, 254, 255, 31, 0, 0, 255, 255, 127, 0, 192, 255, 255, 255, 255, 31, 0, 0, 255, 255, 255, 255, 127, 0, 0, 192, 255, 255, 7, 0, 0, 0, 254, 255, 31, 0, 0, 255, 255, 127, 0, 224, 255, 255, 253, 255, 31, 0, 0, 255, 255, 255, 255, 31, 0, 0, 192, 255, 255, 7, 0, 0, 0, 254, 255, 31, 0, 0, 255, 255, 63, 0, 240, 255, 255, 252, 255, 63, 0, 0, 255, 255, 15, 0, 0, 0, 0, 192, 255, 255, 7, 0, 0, 0, 254, 255, 31, 0, 192, 255, 255, 63, 0, 248, 255, 255, 252, 255, 127, 0, 0, 255, 255, 15, 0, 0, 0, 0, 192, 255, 255, 7, 0, 0, 0, 254, 255, 31, 0, 192, 255, 255, 31, 0, 248, 255, 127, 252, 255, 127, 0, 0, 255, 255, 15, 0, 0, 0, 0, 192, 255, 255, 7, 0, 0, 0, 254, 255, 31, 0, 240, 255, 255, 31, 0, 248, 255, 127, 252, 255, 255, 0, 0, 255, 255, 15, 0, 0, 0, 0, 192, 255, 255, 7, 0, 0, 0, 254, 255, 31, 0, 248, 255, 255, 31, 0, 252, 255, 127, 252, 255, 255, 1, 0, 255, 255, 15, 0, 0, 0, 0, 192, 255, 255, 7, 0, 0, 0, 254, 255, 31, 0, 252, 255, 255, 15, 0, 254, 255, 63, 248, 255, 255, 1, 0, 255, 255, 15, 0, 0, 0, 0, 192, 255, 255, 255, 255, 255, 3, 254, 255, 255, 255, 255, 255, 255, 7, 0, 254, 255, 63, 240, 255, 255, 3, 0, 255, 255, 15, 0, 0, 0, 0, 192, 255, 255, 255, 255, 255, 3, 254, 255, 255, 255, 255, 255, 255, 3, 0, 255, 255, 31, 240, 255, 255, 3, 0, 255, 255, 15, 0, 0, 0, 0, 192, 255, 255, 255, 255, 255, 3, 254, 255, 255, 255, 255, 255, 255, 3, 128, 255, 255, 31, 224, 255, 255, 7, 0, 255, 255, 15, 0, 0, 0, 0, 192, 255, 255, 255, 255, 255, 3, 254, 255, 255, 255, 255, 255, 255, 3, 128, 255, 255, 15, 224, 255, 255, 7, 0, 255, 255, 15, 0, 0, 0, 0, 192, 255, 255, 255, 255, 255, 3, 254, 255, 255, 255, 255, 255, 255, 1, 192, 255, 255, 15, 192, 255, 255, 15, 0, 255, 255, 15, 0, 0, 0, 0, 192, 255, 255, 255, 255, 255, 3, 254, 255, 255, 255, 255, 255, 255, 1, 224, 255, 255, 15, 128, 255, 255, 31, 0, 255, 255, 15, 0, 0, 0, 0, 192, 255, 255, 255, 255, 255, 3, 254, 255, 255, 255, 255, 255, 127, 0, 224, 255, 255, 15, 128, 255, 255, 31, 0, 255, 255, 15, 0, 0, 0, 0, 192, 255, 255, 255, 255, 255, 3, 254, 255, 255, 255, 255, 255, 31, 0, 224, 255, 255, 7, 0, 255, 255, 31, 0, 255, 255, 15, 0, 0, 0, 0, 192, 255, 255, 255, 255, 255, 3, 254, 255, 255, 255, 255, 255, 31, 0, 240, 255, 255, 7, 0, 255, 255, 63, 0, 255, 255, 15, 0, 0, 0, 0, 192, 255, 255, 255, 255, 255, 3, 254, 255, 255, 255, 255, 255, 15, 0, 240, 255, 255, 3, 0, 255, 255, 63, 0, 255, 255, 15, 0, 0, 0, 0, 192, 255, 255, 255, 255, 255, 3, 254, 255, 255, 255, 255, 255, 7, 0, 252, 255, 255, 3, 0, 255, 255, 127, 0, 255, 255, 15, 0, 0, 0, 0, 192, 255, 255, 255, 255, 255, 3, 254, 255, 255, 255, 255, 255, 0, 0, 252, 255, 255, 1, 0, 254, 255, 127, 0, 255, 255, 15, 0, 0, 0, 0, 192, 255, 255, 255, 255, 255, 3, 254, 255, 255, 255, 255, 63, 0, 0, 254, 255, 255, 1, 0, 254, 255, 255, 0, 255, 255, 15, 0, 0, 0, 0, 192, 255, 255, 255, 255, 255, 3, 254, 255, 255, 255, 255, 31, 0, 0, 255, 255, 255, 0, 0, 252, 255, 255, 0, 255, 255, 15, 0, 0, 0, 0, 192, 255, 255, 255, 255, 255, 3, 254, 255, 255, 255, 255, 3, 0, 0, 255, 255, 255, 0, 0, 252, 255, 255, 1, 255, 255, 15, 0, 0, 0, 0, 192, 255, 255, 255, 255, 255, 3, 254, 255, 255, 255, 255, 0, 0, 0, 255, 255, 127, 0, 0, 248, 255, 255, 1, 255, 255, 15, 0, 0, 0, 0, 192, 255, 255, 255, 255, 255, 3, 254, 255, 255, 255, 7, 0, 0, 0

?NUMSNOWFLAKES equ 512

jmp @@main

#
# waitForRetrace
# (c) friol 1999
#

.waitForRetrace:
push r0
@@wfrLoop:
ld8 r0,[0x20000000]
and r0,0x02
cmp r0,0x02
jnz @@wfrLoop
pop r0
rts

#
# creates a random number at each call
# 0x005ffffc is seed&updated
# r0 is mod
# random number is returned in r15
#

.getRandomNumber:
push r1
push r2
ld r1,[0x005ffffc]
ld r2,[0x20010000]
add r1,r2
mul r1,0xf3f1df67
mod r1,0xefcdef15
ld32 [0x005ffffc],r1
mod r1,r0
ld r15,r1
pop r2
pop r1
rts

#
# plot pixel mode 2
# r0=x
# r1=y
# r15=color

.plotPixelMode2:
push r2
ld r2,r1
mul r2,320
add r2,r0
add r2,0x11000000
ld8 [r2],r15
pop r2
rts

#
# init XPLD logo
#

.initXPLDLogo:
push r0
push r1
push r2
push r3
push r4
push r5

ld r3,xpldLogoData
ld r0,36
ld r1,160
ld r15,2

@@writeLogoLoop:
ld r4,8
ld8 r5,[r3]
@@unpackLoop:
ld r2,r5
and r2,1
cmp r2,0
jz @@dontWrite
jsr plotPixelMode2
@@dontWrite:
add r0,1
shr r5,1
sub r4,1
cmp r4,0
jnz @@unpackLoop
add r3,1
cmp r0,284
jnz @@writeLogoLoop
ld r0,36
add r1,1
cmp r1,226
jnz @@writeLogoLoop

pop r5
pop r4
pop r3
pop r2
pop r1
pop r0
rts

#
# init palette
#

.initPalette:
ld8 [0x20000002],0
ld32 [0x20000003],0xff000000
ld8 [0x20000002],1
ld32 [0x20000003],0xffffffff
ld8 [0x20000002],2
ld32 [0x20000003],0xff020202
rts

#
# init array of snowflakes
#

.initSnowflakes:
push r0
push r1
push r2
push r3
push r4

ld r3,0x00500000
ld r4,?NUMSNOWFLAKES

@@initSnowflakesLoop:
ld r0,320
jsr getRandomNumber
ld r1,r15

ld r0,480
jsr getRandomNumber
ld r2,r15
sub r2,480

ld32 [r3],r1
add r3,4
ld32 [r3],r2
add r3,4

sub r4,1
cmp r4,0
jnz @@initSnowflakesLoop

pop r4
pop r3
pop r2
pop r1
pop r0
rts

#
# clear old snowflakes
#

.clearOldSnowflakes:

push r0
push r1
push r2
push r3
push r4

# clear old snowflakes
ld r3,0x00500000
ld r4,?NUMSNOWFLAKES

@@clearFlakesLoop:
ld32 r0,[r3]
add r3,4
ld32 r1,[r3]
add r3,4
ld r15,0
jsr plotPixelMode2
sub r4,1
cmp r4,0
jnz @@clearFlakesLoop

pop r4
pop r3
pop r2
pop r1
pop r0
rts

#
# draw one screen of snowflakes
#

.drawScreen:

push r0
push r1
push r2
push r3
push r4

# process each snowflake
ld r3,0x00500000
ld r4,?NUMSNOWFLAKES

@@drawFlakesLoop:
ld32 r0,[r3]
add r3,4
ld32 r1,[r3]
add r3,4
ld r15,1
jsr plotPixelMode2

sub r4,1
cmp r4,0
jnz @@drawFlakesLoop

pop r4
pop r3
pop r2
pop r1
pop r0
rts

#
# x increment
# r0 is x, can be modified
#

.processXincrement:

push r15

cmp r0,0
jz @@noXincrement

push r0
ld r0,3
jsr getRandomNumber
pop r0

sub r15,1
add r0,r15

@@noXincrement:
pop r15
rts

#
# check if snowflake can fall 
# r0=x
# r1=y
# r15=1 can fall, 0 cant' fall
#

.canFall:
push r2
push r3

ld r15,0
cmp r1,239
jz @@cantFall

ld r2,r1
add r2,1
mul r2,320
add r2,r0
add r2,0x11000000
ld8 r3,[r2]

cmp r3,0
jnz @@cantFall

ld r15,1
@@cantFall:

pop r3
pop r2
rts


#
# upd snowflakes
#

.updateSnowflakes:

push r0
push r1
push r2
push r3
push r4

ld r3,0x00500000
ld r4,?NUMSNOWFLAKES

@@updFlakLoop:
ld32 r0,[r3]
add r3,4
ld32 r1,[r3]
add r3,4

jsr canFall
cmp r15,0
jz @@noUpdateFlake

# increment y
add r1,1
# random x shift
jsr processXincrement

sub r3,8
ld32 [r3],r0
add r3,4
ld32 [r3],r1
add r3,4

@@noUpdateFlake:
sub r4,1
cmp r4,0
jnz @@updFlakLoop

pop r4
pop r3
pop r2
pop r1
pop r0
rts

#
# fadeInLogo
#

.fadeInLogo:

push r0
push r1
push r2
push r3
push r4

ld8 r0,[0x005ffffb]
cmp r0,0xaf
jz @@noFadeIn
add r0,1
ld8 [0x005ffffb],r0

ld r2,r0
ld r3,r0
mul r3,256
ld r4,r0
mul r4,65536
add r2,r3
add r2,r4
add r2,0xff000000

ld8 [0x20000002],2
ld32 [0x20000003],r2

@@noFadeIn:
pop r4
pop r3
pop r2
pop r1
pop r0
rts

#
#
#

@@main:

jsr initPalette
jsr initSnowflakes
jsr initXPLDLogo

ld r14,350
@@mainLoop:
jsr drawScreen
jsr waitForRetrace
jsr clearOldSnowflakes
jsr updateSnowflakes

cmp r14,0
jz @@reCycle
sub r14,1
jmp @@endProc

@@reCycle:
jsr fadeInLogo

@@endProc:
jmp @@mainLoop
